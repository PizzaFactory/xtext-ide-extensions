/*
 * Developer hint: This file was generated by Iro https://eeyo.io/iro/ using the specification 
 * https://github.com/kuniss/xtext-ide-extensions/blob/master/Xtext.iro 
 * If working on the grammar consider to reuse it and contribute back.
 * 
 * To try in Ace editor, copy and paste into the mode creator
 * here : http://ace.c9.io/tool/mode_creator.html
 */

define(function(require, exports, module) {
    "use strict";
    var oop = require("../lib/oop");
    var TextHighlightRules = require("./text_highlight_rules").TextHighlightRules;
    /* --------------------- START ----------------------------- */
    var XtextHighlightRules = function() {
    this.$rules = {
    "start" : [
       {
          "token" : "comment",
          "regex" : "(/\\*)",
          "push" : "multi_line_comment__1"
       },
       {
          "token" : "comment",
          "regex" : "(//.*)"
       },
       {
          "token" : "support.other",
          "regex" : "(\\{)",
          "push" : "Action__1"
       },
       {
          "token" : "entity.name",
          "regex" : "(\\^\\w+)"
       },
       {
          "token" : "keyword",
          "regex" : "(\\bgrammar\\b)|(\\bwith\\b)|(\\bhidden\\b)|(\\bgenerate\\b)|(\\bas\\b)|(\\bimport\\b)|(\\bfragment\\b)|(\\breturns\\b)|(\\btrue\\b)(\\bfalse\\b)|(\\bterminal\\b)|(\\bfragment\\b)|(\\breturns\\b)|(\\bEOF\\b)|(\\benum\\b)|(\\beturns\\b)"
       },
       {
          "token" : "keyword.operator",
          "regex" : "(\\*|&|\\?|\\*|\\+|=|\\||&|!|(=>)|(->)|(\\+=)|(\\?=)|(\\.\\.)|(\\->)|\\(|\\)|<|>|\\[|\\])"
       },
       {
          "token" : "punctuation",
          "regex" : "(,|\\,|:|;)"
       },
       {
          "token" : "support.type",
          "regex" : "(@\\w+)"
       },
       {
          "token" : "meta.tag string.quoted constant.character.entity",
          "regex" : "(\\\")",
          "push" : "STRING__1"
       },
       {
          "token" : "meta.tag string.quoted constant.character.entity",
          "regex" : "(\\')",
          "push" : "STRING__2"
       },
       {
          "token" : "entity.name",
          "regex" : "(\\b\\w+(\\.|\\$\\w+)*\\b)"
       },
       {
          "token" : "invalid",
          "regex" : "([^\\s])"
       },
       {
          defaultToken : "text",
       }
    ], 
    "Action__1" : [
       {
          "token" : "support.other",
          "regex" : "(\\})",
          "next" : "pop"
       },
       {
          defaultToken : "support.other",
       }
    ], 
    "STRING__1" : [
       {
          "token" : "meta.tag string.quoted constant.character.entity",
          "regex" : "(\\\")",
          "next" : "pop"
       },
       {
          defaultToken : "meta.tag string.quoted constant.character.entity",
       }
    ], 
    "STRING__2" : [
       {
          "token" : "meta.tag string.quoted constant.character.entity",
          "regex" : "(\\')",
          "next" : "pop"
       },
       {
          defaultToken : "meta.tag string.quoted constant.character.entity",
       }
    ], 
    "multi_line_comment__1" : [
       {
          "token" : "comment",
          "regex" : "(\\*/)",
          "next" : "pop"
       },
       {
          defaultToken : "comment",
       }
    ]
    };
    this.normalizeRules();
    };
    /* ------------------------ END ------------------------------ */
    oop.inherits(XtextHighlightRules, TextHighlightRules);
    exports.XtextHighlightRules = XtextHighlightRules;
    });
    